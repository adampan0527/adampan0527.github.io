<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/12/14/hello-world/"/>
      <url>/2024/12/14/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>浙大初试经验帖</title>
      <link href="/2022/03/28/%E6%B5%99%E5%A4%A7%E5%88%9D%E8%AF%95%E7%BB%8F%E9%AA%8C%E5%B8%96/"/>
      <url>/2022/03/28/%E6%B5%99%E5%A4%A7%E5%88%9D%E8%AF%95%E7%BB%8F%E9%AA%8C%E5%B8%96/</url>
      
        <content type="html"><![CDATA[<h1 class="bamboo-h-b" id="浙大初试经验帖22e8sjb3rwm" style="color:!important">浙大初试经验帖</h1><div></div><h2 class="bamboo-h-b" id="政治1gwvxlzpw9i" style="color:red!important">政治</h2><div></div><p>政治属于一门高分性价比极低，但是中高分性价比极高的课程，举个例子，政治想要70+，可能一个月就够，但是想要80+少说得两三个月的准备，因此，对于大多数人而言，65~75这个分段的分数是不难的（虽然我并没达到）。</p><p>政治没有太多的灵活变通，押题也是所有课中最简单的，无非就是：国家政策、国家领导人重要讲话、当今时事热点这几个方面，而这几个方面是每年都有变化的，因此政治的真题反而没有模拟题重要，政治的模拟题、押题是一定要买的，虽然今年肖老爷子翻车了，但对于23、24甚至更迟考研的学弟学妹们来说，我认为肖四肖八仍旧是必备选项，当然其他的政治考研名师也可，例如腿姐等。</p><p>政治的准备时间可以安排在考前的三个月，每天花2~3个小时去背政治即可，拿个70左右的分数不在话下。</p><h2 class="bamboo-h-b" id="英语2jazc2ajtqk" style="color:red!important">英语</h2><div></div><p>众所周知，英语极其花时间，需要长时间的积累，所谓的技巧只不过是锦上添花，如果你连句子都看不懂，那技巧就是在放屁！</p><p>因此英语的单词是必须每天都要背的，要坚持到考试的前一天！什么时候开始都不算早，时间充裕就一天20个足够，时间太少就一天50或者60个，但主要是坚持。</p><p>对于英语而言，和政治完全相反，英语的模拟题可以完全抛弃！！！！一份都不用做！！！！！可能有学弟学妹真题答案都背下来了，但是答案完全不重要，重要的是，你在文章中的哪个部分找到了对应题目的答案，如果有精力甚至可以把阅读文章翻译一遍。</p><p>英语的单词从现在就可以开始，而阅读、完型等等可以从你即将考试的那年6月份开始。</p><h2 class="bamboo-h-b" id="数学xdzty042sv" style="color:red!important">数学</h2><div></div><p>数学的核心在于理解与刷题，有些人会看很多视频但是不刷题，这样就直接导致了他们一看就会，一做就废。所以数学的知识点学习和刷题一定是同步的，如果你问我买课有没有必要？那我的答案是有。当然你也可以选择看网上的盗版视频，这不重要。</p><p>课程中老师会给你提供一些很好的做题方法，而这些方法往往是在题目的标准答案中不会提到的，同时老师也能帮你把知识点进行梳理，为你节省时间。</p><p>数学的真题相当重要，模拟题会比真题难，因此做模拟题可能会打击自己的自信心，如果目标在130+，那没问题，直冲模拟题，但如果不是的话，可以多刷几遍真题，真题yyds。</p><h2 class="bamboo-h-b" id="4082nqmpvp5qvc" style="color:red!important">408</h2><div></div><p>408直接冲王道就行了，跟着王道的课程走，买个全程也就2K+，不买课也要买王道的书，只要是考408的认准王道就行。</p>]]></content>
      
      
      <categories>
          
          <category> 考研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 初试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浙大复试技巧</title>
      <link href="/2022/03/25/%E6%B5%99%E5%A4%A7%E5%A4%8D%E8%AF%95%E6%8A%80%E5%B7%A7/"/>
      <url>/2022/03/25/%E6%B5%99%E5%A4%A7%E5%A4%8D%E8%AF%95%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h1 class="bamboo-h-b" id="浙大复试技巧kmc0876yw" style="color:!important">浙大复试技巧</h1><div></div><p>简单介绍一下自己，我22年考研，已经被浙大软院人工智能拟录取，初试343（排名21），机试92（排名未知），复试总分87.68（排名3），希望我的经验能对你有所帮助。</p><h2 class="bamboo-h-b" id="复试流程介绍2w4qx102nj4" style="color:red!important">复试流程介绍</h2><div></div><p>复试的流程分为两步：自我介绍+导师提问。在线上面试时，自我介绍需要考生准备PPT，而且线上面试时复试在总分中的占比不会很高（至少一定是比该院校线下面试低的）</p><h2 class="bamboo-h-b" id="自我介绍1ia7fpegpy1" style="color:red!important">自我介绍</h2><div></div><p>自我介绍是面试过程中你唯一的可控部分，因此一定要将自己的长处表现出来，例如：竞赛、论文、项目等等。</p><p>拿我做例子，我擅长的就是竞赛，因此在PPT中有单独的一个模块来介绍我获得的奖项以及获奖证书。</p><p>另外，导师通常会比较喜欢对研究生方向有所涉猎的学生，例如我报考的是人工智能，因此我有一点人工智能的基础的话，老师会更加喜欢。我本科有自己看视频，了解线性代数的本质（矩阵、特征值、特征向量、行列式的几何意义等），因此我就会把这部分在自我介绍中讲出来，尽可能展示自己。</p><h2 class="bamboo-h-b" id="导师提问8tt50ddav6k" style="color:red!important">导师提问</h2><div></div><p>一般来说，导师提问环节是不可控的，但是我希望学弟学妹们能明白一件事，导师只能通过你的简历和自我介绍认识你，那么问的问题除了专业课+综合性问题，只能是从你的简历和自我介绍下手。</p><p>所以！！你完全可以在自我介绍的时候说一半！！！好处有两点：</p><ol><li>一旦你讲一半，导师就有可能对你剩下的一半感兴趣，从而针对剩下的一半进行提问，而你恰好知道他会问且有心理准备，通常来讲可以回答的非常好</li><li>自我介绍的时间是有限制的，例如浙大软院是给了8min，我可以把重要的内容省略不说，一旦老师问剩下的一半，就相当于你将本该占用自我介绍时间的内容转移到了导师提问环节！</li></ol><h2 class="bamboo-h-b" id="举个例子yz3m6i781x" style="color:red!important">举个例子</h2><div></div><p>（自我介绍时）</p><p>我：我在本科的时候受同学推荐去看了线性代数的本质这系列视频，并对线性代数的本质有一定的理解（内心OS：理解是啥呢？我就等你问）</p><p>（导师提问时）</p><p>导师：你刚刚提到你看了线性代数的本质，那你能讲讲矩阵的意义吗？（这不就落网了？）</p><p>我：巴拉巴拉……</p>]]></content>
      
      
      <categories>
          
          <category> 考研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 复试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>零基础浙大复试上机</title>
      <link href="/2022/03/24/%E9%9B%B6%E5%9F%BA%E7%A1%80%E6%B5%99%E5%A4%A7%E5%A4%8D%E8%AF%95%E4%B8%8A%E6%9C%BA/"/>
      <url>/2022/03/24/%E9%9B%B6%E5%9F%BA%E7%A1%80%E6%B5%99%E5%A4%A7%E5%A4%8D%E8%AF%95%E4%B8%8A%E6%9C%BA/</url>
      
        <content type="html"><![CDATA[<h1 class="bamboo-h-b" id="零基础浙大复试上机v3afo8hwr0" style="color:!important">零基础浙大复试上机</h1><div></div><p>先简单介绍一下我自己，本人于大三加入ACM实验室，训练一年获得ICPC铜牌，其他奖项若干，2022年考研，目标浙大软院的人工智能方向。</p><p>如果你是跨考或是对自己的机试没有信心，移步<a href="https://space.bilibili.com/335829447/channel/series">零基础浙大复试上机</a>，我将在这一系列视频中从零开始带你一步步增强自己的算法能力。</p>]]></content>
      
      
      <categories>
          
          <category> 考研 </category>
          
          <category> 复试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速幂</title>
      <link href="/2022/03/20/%E5%BF%AB%E9%80%9F%E5%B9%82/"/>
      <url>/2022/03/20/%E5%BF%AB%E9%80%9F%E5%B9%82/</url>
      
        <content type="html"><![CDATA[<h1 class="bamboo-h-b" id="快速幂b3aoobdrg4w" style="color:!important">快速幂</h1><div></div><p>快速幂在ACM中是非常常用的一种算法，是常在求$a^{n}$但n很大的时候用于加速运算的算法（通常会对某个质数p取模），那快速幂为什么快？有多快？能否拓展到其他运算符中呢？</p><h2 class="bamboo-h-b" id="快速幂为什么快？有多快？2bt9sotjjkh" style="color:red!important">快速幂为什么快？有多快？</h2><div></div><p>要了解快速幂为什么快就要先了解快速幂是怎么实现的，从其思想来看就是将n转换成二进制，并将其看成是多个2^x^（x为整数）相加的结果，将本该进行n次的运算降低到logn次，我们求出最大的2^x^需要进行logn次运算，而将这最多有logn个的结果再进行logn次运算，因此最终的时间复杂度为logn！</p><p>上代码！</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> p = <span class="number">1e9</span><span class="number">+7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">quick_pow</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> n)</span></span>&#123;<span class="comment">//求a的n次方对p取模的值</span></span><br><span class="line">    <span class="type">int</span> ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(n)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>) ans=(ans*a)%p;<span class="comment">//如果n当前位上的值为1，意味着我们需要乘上这个a</span></span><br><span class="line">        a=a*a%p;<span class="comment">//位数每往高处走一位，就意味着a做了平方操作</span></span><br><span class="line">        n&gt;&gt;=<span class="number">1</span>;<span class="comment">//用n右移一位的方式来表示当前位数</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans%p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 class="bamboo-h-b" id="快速幂能否拓展？202iiv9zg6k" style="color:red!important">快速幂能否拓展？</h2><div></div><p>答案是：可以！</p><p>假设现在的运算符为op。</p><p>我们将n个a都列出来，于是我们得到了</p><p>a op a op a op a……总共n个a进行op操作</p><p>按照快速幂的思想我们将这n个a进行划分，假设这里一共有6个a</p><p>a op a op a op a op a op a</p><p>很显然6&#x3D;2+4，以二进制的形式表示也就是110，因此我们将这6个a划分为2个一组和4个一组，得到了</p><p>(a op a) op (a op a op a op a)</p><p>因此显然我们能够得到这样一个结论：当运算符满足结合律时，就可以用快速幂的思想对这个运算进行加速。例：加法，幂（可以尝试一下求$2^{2^{2^{2}}}$，连续幂运算是否能够如此加速）</p><p>但显然，如同减法、除法这种不满足结合律的运算就不能够使用快速幂进行加速。</p><p>最终代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> op +</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> element_type int</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> e 0</span></span><br><span class="line"></span><br><span class="line"><span class="function">element_type <span class="title">quick_pow</span><span class="params">(element_type a, <span class="type">int</span> n)</span></span>&#123;</span><br><span class="line">    element_type ans=e;<span class="comment">//e在这里表示运算符op的单位元</span></span><br><span class="line">    <span class="keyword">while</span>(n)&#123;</span><br><span class="line">        ans = ans op a;</span><br><span class="line">        a = a op a;</span><br><span class="line">        n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PS：想了解单位元相关知识移步<a href="https://adampan0527.github.io/2021/04/27/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E4%B8%AD%E7%9A%84%E7%89%B9%E6%AE%8A%E7%9F%A9%E9%98%B5%E4%B8%8E%E4%BA%8C%E6%AC%A1%E5%9E%8B/">线性代数中的特殊矩阵与二次型</a></p>]]></content>
      
      
      <categories>
          
          <category> algorithms </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithms </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>磁盘I/O</title>
      <link href="/2021/08/15/%E7%A3%81%E7%9B%98I-O/"/>
      <url>/2021/08/15/%E7%A3%81%E7%9B%98I-O/</url>
      
        <content type="html"><![CDATA[<h1 class="bamboo-h-b" id="磁盘I/O1sonni8usmy" style="color:!important">磁盘I/O</h1><div></div><h2 class="bamboo-h-b" id="I/O系统层次及功能1pmh7zyv1mm" style="color:red!important">I/O系统层次及功能</h2><div></div><h3 class="bamboo-h-b" id="用户层软件208q36modlt" style="color:blue!important">用户层软件</h3><div></div><p>用户层软件实现的是与用户进行交互的接口，用户可以通过调用用户层软件提供的I&#x2F;O库函数对设备进行操作</p><p>用户软件必须通过一组系统调用来获取操作系统服务</p><h3 class="bamboo-h-b" id="设备独立性软件2jlk2kewb6c" style="color:blue!important">设备独立性软件</h3><div></div><p>什么是设备独立性？</p><p>​设备独立性指的是应用程序独立于具体使用的物理设备，从而引入了“逻辑设备”的概念</p><p>设备独立性能够带来什么好处？</p><ol><li>设备分配时的灵活性</li><li>易于实现I&#x2F;O的重定向</li></ol><p>设备独立性软件都有什么功能？</p><ol><li>执行公共设备的共有操作<ol><li>对独立设备的分配与回收</li><li>将逻辑设备名映射为物理设备名</li><li>对设备进行保护</li><li>缓冲管理</li></ol></li><li>向用户层软件提供统一接口</li></ol><h3 class="bamboo-h-b" id="设备驱动程序6bdgqkdufpo" style="color:blue!important">设备驱动程序</h3><div></div><p>通常也称“设备处理程序”，它是I&#x2F;O进程与设备控制器之间的通信程序， 又由于经常以进程的形式存在，所以称之为设备驱动程序。</p><p>任务：</p><ol><li>接收上层软件发来的抽象I&#x2F;O请求，并将其转为具体要求发送给设备控制器，然后启动设备去执行请求</li><li>将设备控制器发来的信号发送给上层软件</li></ol><p>功能：</p><ol><li>接收由设备独立性软件发来的命令和参数</li><li>检查用户I&#x2F;O请求的合法性</li><li>发出I&#x2F;O命令（向设备控制器）</li><li>及时相应由控制器或者通道发来的中断请求，并根据中断的类型调用相应的中断处理程序</li><li>若OS设有通道，驱动程序还能根据用户的I&#x2F;O请求自动构建通道程序</li></ol><p>设备处理方式</p><ol><li>为每一类设备设置一个进程</li><li>整个系统设置一个进程</li><li>不设置专门的处理程序，但为各类设备设置相应的设备处理程序</li></ol><h3 class="bamboo-h-b" id="中断处理层a873ot2v444" style="color:blue!important">中断处理层</h3><div></div><p>中断处理层软件的主要工作是进行进程上下文的切换，对处理中断信号源进行测试，读取设备状态和修改进程状态。</p><p>处理过程：</p><ol><li>唤醒被阻塞的驱动进程</li><li>保护被中断进程的CPU环境</li><li>载入相应的设备处理程序</li><li>中断处理</li><li>恢复被中断进程的现场</li></ol><h2 class="bamboo-h-b" id="I/O缓冲34nqt1mfqge" style="color:red!important">I/O缓冲</h2><div></div><p>设置缓冲区的目的是什么？</p><ol><li>可以缓和CPU（快）和I&#x2F;O设备（慢）之间速度不匹配的矛盾</li><li>减少对CPU的中断频率，放宽对CPU中断响应时间的限制</li><li>提高CPU和IO设备之间的并行性</li></ol><h3 class="bamboo-h-b" id="缓冲区6980cdhnt1o" style="color:blue!important">缓冲区</h3><div></div><ol><li><p>单缓冲</p><p>数据从I&#x2F;O设备到缓冲区和从缓冲区到工作区不能同时进行</p></li><li><p>双缓冲</p><p>数据从I&#x2F;O设备到缓冲区和从缓冲区到工作区可以同时进行</p></li></ol><h2 class="bamboo-h-b" id="SPOOLing7ffwk0ab7l4" style="color:red!important">SPOOLing</h2><div></div><p>SPOOLing技术又称假脱机技术，其含义是在联机的情况下实现外围操作，这样就不会导致CPU近乎闲置</p><h3 class="bamboo-h-b" id="SPOOLing技术的组成123mclv5118" style="color:blue!important">SPOOLing技术的组成</h3><div></div><ol><li>输入井和输出井（位置：磁盘）</li><li>输入缓冲区和输出缓冲区（位置：内存）</li><li>输入进程和输出进程（由OS提供）</li><li>井管理程序</li></ol><h3 class="bamboo-h-b" id="SPOOLing技术的特点1k5lglr1fpd" style="color:blue!important">SPOOLing技术的特点</h3><div></div><ol><li>提高了I&#x2F;O速度</li><li>将独占设备改造为共享设备（后来的进程可以将需要输出的数据存放在缓冲区）</li><li>实现了虚拟设备的功能</li></ol><h2 class="bamboo-h-b" id="错题2ks2yvocyue" style="color:red!important">错题</h2><div></div><ol><li><p>用户程序发出磁盘I&#x2F;O请求后，系统的正确处理流程是</p><p>用户程序–&gt;系统调用处理程序–&gt;设备驱动程序–&gt;中断处理程序</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 408 </category>
          
          <category> 考研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 磁盘 </tag>
            
            <tag> OS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>线性代数杂项</title>
      <link href="/2021/06/29/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E6%9D%82%E9%A1%B9/"/>
      <url>/2021/06/29/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E6%9D%82%E9%A1%B9/</url>
      
        <content type="html"><![CDATA[<h1 class="bamboo-h-b" id="杂项3c892h91nfu" style="color:!important">杂项</h1><div></div><p>此博客用于记录各种奇奇怪怪的线性代数中的知识点</p><h2 class="bamboo-h-b" id="矩阵的秩ylpg2w1ywk" style="color:red!important">矩阵的秩</h2><div></div><p>矩阵的秩代表着这个矩阵实际能表示的空间维度，代表多元一次方程组常数项时也可以理解为有效方程的个数，矩阵相乘或者相加时，矩阵的秩也会有相应的变化<br>$$<br>\large r(A+B)\le r(A)+r(B)\[2ex]<br>\large r(AB)\le min(r(A), r(B))\[2ex]<br>\large A_{m\times n}B_{n\times p}&#x3D;0\implies r(A)+r(B)\le n\[2ex]<br>\large r(A^TA)&#x3D;r(A)\quad (A(m\times n))\[2ex]<br>\large r(A_{m\times n})&#x3D;n\implies r(AB)&#x3D;r(B)\[2ex]<br>\large r(B_{n\times s})&#x3D;n\implies r(AB)&#x3D;r(A)\[2ex]<br>\large r(A^*)&#x3D;<br>\begin{cases}<br>    n,\quad r(A)&#x3D;n\<br>    1,\quad r(A)&#x3D;n-1\<br>    0,\quad r(A)&lt;n-1<br>\end{cases}<br>$$</p><h2 class="bamboo-h-b" id="矩阵与向量组等价2acw2sw8nyr" style="color:red!important">矩阵与向量组等价</h2><div></div><p>矩阵的等价：一个矩阵可以通过有限次初等变换变成另一个矩阵</p><p>向量组等价：两个向量组表示相同维度的空间</p><h2 class="bamboo-h-b" id="矩阵间的关系1xgrdoq4357" style="color:red!important">矩阵间的关系</h2><div></div><p>矩阵间的关系有：相似、合同、等价。三者的关系可以划分为相似&#x3D;&gt;合同&#x3D;&gt;等价</p><p>当然，要说两个矩阵之间有上述三种关系，首先两个矩阵要满足是同型矩阵（即行数与列数都相同）</p><h3 class="bamboo-h-b" id="等价1v3xbzi7gre" style="color:blue!important">等价</h3><div></div><p>两个矩阵等价意味着一个矩阵可以通过初等变换变成另一个矩阵的样子。</p><h3 class="bamboo-h-b" id="合同147u7mp7ll8" style="color:blue!important">合同</h3><div></div><p>合同的定义是存在矩阵C使得C^T^AC&#x3D;B。</p><p>单从定义上看似乎没有什么突破口，但矩阵合同必然满足一些性质，如</p><ol><li>A与B的正负惯性指数相同</li><li>A与B的顺序主子式的正负个数相同</li><li>A与B的正负特征值个数相同</li></ol><p>需要注意的是，惯性指数需要</p><h3 class="bamboo-h-b" id="相似6jobtduauc4" style="color:blue!important">相似</h3><div></div><p>定义：存在矩阵P使得P^-1^AP&#x3D;B</p><p>同样的，光是从定义上看无法获得什么信息，但从性质入手，思路就变得清晰了：</p><ol><li>A与B的秩相同</li><li>A与B的特征值相同</li><li>A与B的行列式相同</li><li>A与B的迹相同</li><li>A与B的转置也相似</li><li>A与B的逆矩阵也相似</li><li>A与B的伴随矩阵也相似</li><li>A与B的矩阵多项式也相似（多项式形式相同）</li></ol>]]></content>
      
      
      <categories>
          
          <category> 考研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线性代数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>线性代数中的特殊矩阵与二次型</title>
      <link href="/2021/04/27/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E4%B8%AD%E7%9A%84%E7%89%B9%E6%AE%8A%E7%9F%A9%E9%98%B5%E4%B8%8E%E4%BA%8C%E6%AC%A1%E5%9E%8B/"/>
      <url>/2021/04/27/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E4%B8%AD%E7%9A%84%E7%89%B9%E6%AE%8A%E7%9F%A9%E9%98%B5%E4%B8%8E%E4%BA%8C%E6%AC%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 class="bamboo-h-b" id="特殊矩阵与二次型2n1lprgpr2a" style="color:!important">特殊矩阵与二次型</h1><div></div><p>在线性代数中有各种奇奇怪怪的特殊矩阵，比如实对称矩阵、逆矩阵等等，这些矩阵都有一些特殊的性质，在后续的特征值、特征向量、二次型中都有相应的联系，所以在线性代数中一定要首先把握好矩阵的基本性质，再考虑如何去使用。</p><h2 class="bamboo-h-b" id="实对称矩阵2dbhwa1pwq2" style="color:red!important">实对称矩阵</h2><div></div><p>实对称矩阵的__定义__非常简单，一个矩阵的转置和这个矩阵本身相等（相等和转置不知道的可以放弃考研了）</p><p>实对称矩阵的用途在后续的模块中会有提到，在这里就不特别列出来了。</p><h2 class="bamboo-h-b" id="逆矩阵32cr34fm5z0" style="color:red!important">逆矩阵</h2><div></div><p>逆矩阵是一个非常特殊的矩阵，一个矩阵的逆矩阵与该矩阵做乘法运算会得到单位矩阵，也就是$A^{-1}*A&#x3D;E$</p><p>这里讲一些特殊的概念（此概念与线性代数无关，与考研无关，有兴趣的兄弟们可以看看）：</p><h3 class="bamboo-h-b" id="单位元brp9a1aovyw" style="color:blue!important">单位元</h3><div></div><p>单位元是某一运算中特殊的对象，如在加法运算中，单位元就是0，因为任何数加上0都是这个数本身，同理，在乘法运算中，单位元就是1。</p><p>对上面这句话稍作理解，相信对单位元已经有了一个大概的认识，某个操作的单位元就是任意一个符合进行此操作的前置要求的元素与单位元进行这个运算，结果依旧是该元素。</p><p>在矩阵乘法的运算中，单位元就是对应阶数的单位矩阵E，因为E和任意矩阵做矩阵乘法运算，得出来的结果都会是这个矩阵本身。</p><h3 class="bamboo-h-b" id="逆元1e93p2k7c8d" style="color:blue!important">逆元</h3><div></div><p>了解逆元需要首先知道单位元的概念。</p><p>一个对象与该对象的逆元做特定运算，得到的结果是这个运算的单位元。</p><p>你可以把求逆元的过程看作是单位元对某一对象做该运算的逆运算。</p><p>这么说可能有些复杂，下面我给出一些例子：</p><ol><li>加法运算中的单位元是0，一个数的逆元是这个数的相反数（加法的逆运算是减法）</li><li>乘法运算中的单位元是1，一个数的逆元是这个数的倒数（乘法的逆运算是除法）</li><li>矩阵乘法中的单位元是E，一个矩阵的逆元就是这个矩阵的逆矩阵</li></ol><p>为什么我在之前的描述中都用了“对象”这个词，而不是“数”，因为某些运算的对象并不是一个数，如矩阵乘法，求逆等等。</p><h3 class="bamboo-h-b" id="逆矩阵与逆元的关系24e4dzq439a" style="color:blue!important">逆矩阵与逆元的关系</h3><div></div><p>逆矩阵就是在矩阵乘法这个运算中，某一矩阵的逆元就是这个矩阵的逆矩阵。</p><p>众所周知，不是所有矩阵都可逆，也就是说，不是所有矩阵都有逆元，这一点也很好理解，因为在乘法运算中，0就没有逆元（$\frac{1}{0}$无意义）</p><h2 class="bamboo-h-b" id="特征值与特征向量1tjp02a85jg" style="color:red!important">特征值与特征向量</h2><div></div><p>特征值与特征向量是相互绑定的一对概念，对于某个矩阵来说，求出它的特征值，就能得到相应的特征向量（可能不止一个）</p><p>定义：一个方阵A<br>$$<br>\large A\alpha&#x3D;\lambda\alpha<br>$$<br>则$\lambda$为A的特征值，$\alpha$为A对应于$\lambda$的特征向量</p><h3 class="bamboo-h-b" id="特征值的含义255ze3lmv85" style="color:blue!important">特征值的含义</h3><div></div><p>首先看等式的左边，对一个向量左乘一个矩阵代表对这个向量进行线性变换，也就是说，左边代表的是$\alpha$进行矩阵A的线性变换后的新向量</p><p>再来看等式的右边，右边就非常好理解了，是将$\alpha$变为原本的$\lambda$倍</p><p>两个向量相等，也就是说向量$\lambda$在进行矩阵A的线性变换后的变化等同于对其长度的改变，长度的改变值就是特征值</p><h3 class="bamboo-h-b" id="如何求特征值2b17vltklk9" style="color:blue!important">如何求特征值</h3><div></div><p>我们对上述的式子进行移项并提取公因式，可以得出只要令$|A-\lambda E|&#x3D;0$即可，即$(A-\lambda E)x&#x3D;0$这个多元一次方程组有非零解</p><h2 class="bamboo-h-b" id="向量5t2twnsoj6" style="color:red!important">向量</h2><div></div><p>可能看到这里会有点好奇为什么把向量放在这里，其实向量本质上就是一个一维矩阵，或者说，n*m的矩阵本质上就是n个m维向量并列组成的</p><h3 class="bamboo-h-b" id="正交矩阵1pgn1mnqp8b" style="color:blue!important">正交矩阵</h3><div></div><p>正交矩阵就是每一对向量都互相正交（也就是垂直），特别需要注意的是，正交矩阵中的向量必须是单位向量</p><h3 class="bamboo-h-b" id="施密特正交法1n2y8av7ui1" style="color:blue!important">施密特正交法</h3><div></div><p>对于$\alpha_1, \alpha_2, \alpha_3$，取<br>$$<br>\begin{align}<br>\large \beta_1 &amp; &#x3D;\alpha_1\<br>\large \beta_2 &amp; &#x3D;\alpha_2-\frac{(\alpha_2, \beta_1)}{||\beta_1||}\beta_1\<br>\large \beta_3 &amp; &#x3D;\alpha_3-\frac{(\alpha_3, \beta_1)}{||\beta_1||}\beta_1-\frac{(\alpha_3, \beta_2)}{||\beta_2||}\beta_2<br>\end{align}<br>$$<br>此处的$\beta_1, \beta_2, \beta_3$三个向量是互相正交的，接下来只需要将这三个向量分别单位化即可</p><h2 class="bamboo-h-b" id="实对称矩阵的相似对角化3lcaknkvcz" style="color:red!important">实对称矩阵的相似对角化</h2><div></div><ol><li>求出矩阵A的所有特征值</li><li>求出矩阵A的所有特征向量</li><li>对相同特征值的特征向量正交化</li><li>对所有特征向量单位化</li><li>得到正交矩阵Q，且$Q^TAQ&#x3D;diag(\lambda_1……\lambda_n)$（对角矩阵）</li></ol><h2 class="bamboo-h-b" id="二次型zhww8v8n31" style="color:red!important">二次型</h2><div></div><p>首先了解二次型的定义：<br>$$<br>\large f&#x3D;x^TAx\quad(A^T&#x3D;A)\<br>$$<br>即f为每一项都含有x<del>i</del>与x<del>j</del>相乘的多项式（i与j可以相等）</p><h3 class="bamboo-h-b" id="标准型1o0nty1s5k9" style="color:blue!important">标准型</h3><div></div><p>标准型是一种特殊的二次型，标准型中只含有平方项，有两种方法可以将二次型化为标准型：</p><ol><li><p>正交变换法</p><p>求得正交矩阵Q使得x&#x3D;Qy，即可得到$\large f&#x3D;y^T\Lambda y$</p><p>其中$\Lambda$由A的特征值构成，Q中的向量为对应列的特征值的特征向量（需要将向量正交化）</p></li><li><p>配方法</p></li></ol><p>规范型又是一种特殊的标准型，规范型中不仅只有平方项，平方项前的系数只有-1, 0, 1</p><h3 class="bamboo-h-b" id="矩阵合同2lvfbjx6cqa" style="color:blue!important">矩阵合同</h3><div></div><p>若矩阵A，B为对称矩阵，C为可逆矩阵</p><p>且$B&#x3D;C^TAC$，则矩阵A与B合同</p><p>充要条件：</p><ol><li>A与B的正负惯性指数个数相同</li><li>A与B的正负特征值个数相同</li></ol><p>性质：</p><ol><li>矩阵合同是一种特殊的等价变换</li><li>A与B具有相同的秩，且合同不改变矩阵的对称性</li></ol><h3 class="bamboo-h-b" id="正定二次型与正定矩阵1nb6cvacoa3" style="color:blue!important">正定二次型与正定矩阵</h3><div></div><p>定义：若对于任意的$\alpha\ne0$都有$f&#x3D;\alpha^TA\alpha&gt;0$</p><p>则f为正定二次型，A为正定矩阵</p><p>判别法：</p><ol><li>A的特征值都大于0</li><li>A的各顺序主子式都大于0</li></ol>]]></content>
      
      
      <categories>
          
          <category> 考研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线性代数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构笔记</title>
      <link href="/2021/04/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AC%94%E8%AE%B0/"/>
      <url>/2021/04/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 class="bamboo-h-b" id="数据结构笔记bn93v53skxc" style="color:!important">数据结构笔记</h1><div></div><h2 class="bamboo-h-b" id="卡特兰数2esvt4m4s6v" style="color:!important">卡特兰数</h2><div></div><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><ol><li>有2n个人排成一行进入剧场，入场费5元，其中n个人有5元钞票，n个人有10元钞票，剧院无多余钞票。问有多少种方法使得只要有10元人买票，售票处就有5元的钞票找零</li><li>一个边长为n的正方形，从左下角走到右上角，不穿过对角线，问有几种不同的方法</li><li>圆上选择2n个点，问有多少种方法将这些点两两相连，所得到的n条线段两两不相交</li><li>对角线不相交的情况下，将凸n边形分成三角形区域的方法数</li><li>n个元素进栈，问有多少种出栈方法</li><li>n个节点可以构造多少个不同的二叉树</li><li>n个1和n个-1构成2n项序列，问从a<del>1</del>开始，部分和始终大于等于0的序列有多少种</li></ol><h3 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h3><p>$$<br>\large f(n)&#x3D;C_n^{2n}-C_{n-1}^{2n}<br>$$</p>]]></content>
      
      
      <categories>
          
          <category> 考研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础 </tag>
            
            <tag> 公式 </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>408 计组公式与缩写</title>
      <link href="/2021/03/28/408-%E8%AE%A1%E7%BB%84%E5%85%AC%E5%BC%8F%E4%B8%8E%E7%BC%A9%E5%86%99/"/>
      <url>/2021/03/28/408-%E8%AE%A1%E7%BB%84%E5%85%AC%E5%BC%8F%E4%B8%8E%E7%BC%A9%E5%86%99/</url>
      
        <content type="html"><![CDATA[<h1 class="bamboo-h-b" id="计组公式与缩写1ea7u7rltqb" style="color:!important">计组公式与缩写</h1><div></div><h2 class="bamboo-h " id="名词缩写2lnsofzbapc">名词缩写</h2><br/><p>MAR：地址寄存器(Memory Address Register)</p><p>MDR：数据寄存器(Memory Data Register)</p><p>ALU：算数逻辑单元(Arithmetic Logic Unit)</p><p>CPU：中央处理器(Central Processing Unit)</p><p>PC：程序计数器(Program Counter)</p><p>IR：指令寄存器(Instruction Register)</p><p>CU：控制单元(Control Unit)</p><p>MIPS：每秒执行百万条指令数(Million Instruction Per Second)</p><p>ACC：累加器(Accumulator)</p><p>MQ：乘商寄存器(Multiplier-Quotient Register)</p><p>CF：进位标志(Carry Flag)</p><h2 class="bamboo-h " id="公式c5b17amovkg">公式</h2><br/><h3 id="计算MIPS"><a href="#计算MIPS" class="headerlink" title="计算MIPS"></a>计算MIPS</h3><p>$$<br>MIPS&#x3D;\frac{I_n}{t_{cpu}\times 10^6}&#x3D;\frac {f}{CPI \times 10^6}\<br>t_{cpu}&#x3D;N_c·T<br>$$</p>]]></content>
      
      
      <categories>
          
          <category> 考研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机组成原理 </tag>
            
            <tag> 基础 </tag>
            
            <tag> 公式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高数公式合集</title>
      <link href="/2021/03/18/%E9%AB%98%E6%95%B0%E5%85%AC%E5%BC%8F%E5%90%88%E9%9B%86/"/>
      <url>/2021/03/18/%E9%AB%98%E6%95%B0%E5%85%AC%E5%BC%8F%E5%90%88%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<h1 class="bamboo-h-b" id="考研高数公式合集25cbe9uzwd5" style="color:!important">考研高数公式合集</h1><div></div><p>考研的过程中数学公式往往是最难记忆的，特别是当不能通过简单的推理得到答案的时候，所以这里我列出了一些比较难记&#x2F;重要的公式，方便查看。</p><h2 class="bamboo-h red" id="重要不定积分8r26hy10sg0">重要不定积分</h2><br/><p>$$<br>\LARGE \int_{-\infty}^\infty{e^{-x^2}dx}&#x3D;\sqrt{\pi}\<br>\LARGE \int_0^\frac{\pi}2f(sinx)&#x3D;\int_0^\frac{\pi}2f(cosx)\<br>\LARGE \int_0^\frac{\pi}2\frac{sin^px}{sin^px+cos^px}&#x3D;\frac{\pi}4\<br>$$</p><h2 class="bamboo-h red" id="参数方程表示的函数求导uc4bbkdhb7">参数方程表示的函数求导</h2><br/><p>对于<br>$$<br>\begin{cases}<br>\LARGE x&#x3D;x(t)\<br>\LARGE y&#x3D;y(t)<br>\end{cases}<br>$$<br> 则：</p><p>$$<br>\Huge \frac{dy}{dx}&#x3D;\frac{\frac{dy}{dt}}{\frac{dx}{dt}}\<br>\Huge \frac{d^2y}{dx^2}&#x3D;\frac{\frac{d^2y}{dt^2}\frac{dx}{dt}-\frac{d^2x}{dt^2}\frac{dy}{dt}}{(\frac{dx}{dt})^3}<br>$$</p><h2 class="bamboo-h red" id="泰勒展开2a2xdkrpxit">泰勒展开</h2><br/><p>基本公式<br>$$<br>\LARGE f(x)&#x3D;f(x_0)+f^{‘}(x_0)(x-x_0)+…+\frac{f^{(n)}(x_0)}{n!}(x-x_0)^n+\frac{R_n(x)}{o(x^n)}<br>$$</p><h3 class="bamboo-h blue" id="重要公式2l0b4k7050m">重要公式</h3><br/><p>$$<br>\LARGE e^x&#x3D;1+x+\frac{x^2}{2!}+…+\frac{x^n}{n!}\<br>\LARGE ln(1+x)&#x3D;x-\frac{x^2}{2}+\frac{x^3}{3}+…+\frac{(-1)^{n-1}}{n}x^n\<br>\LARGE sinx&#x3D;x-\frac{x^3}{3!}+\frac{x^5}{5!}+…+\frac{(-1)^{n-1}}{(2n-1)!}x^{2n+1}\<br>\LARGE cosx&#x3D;1-\frac{x^2}{2!}+\frac{x^4}{4!}+…+\frac{(-1)^{n-1}}{2n-2}x^{2n-2}\<br>\LARGE tanx&#x3D;x+\frac{x^3}{3}+\frac{x^5}{5}+…+\frac{x^{2n-1}}{2n-1}\<br>\LARGE arctanx&#x3D;x-\frac{x^3}{3}+\frac{x^5}{5}+…+\frac{(-1)^{n-1}}{2n-1}x^{2n-1}\<br>\LARGE (1+x)^a&#x3D;1+ax+\frac{a(a-1)}{2!}x^2+…+\frac{a(a-1)…(a-n+1)}{n!}x^n<br>$$<br>在所有的公式中$R_n(x)$为拉格朗日余项，多用于证明题<br>$$<br>\LARGE R_n(x)&#x3D;\frac{f^{(n+1)}(\xi)}{(n+1)!}(x-x_0)^{n+1}\<br>\LARGE \xi&#x3D;\theta x<br>$$</p><h2 class="bamboo-h red" id="曲率公式cjxajs8fejc">曲率公式</h2><br/><p>前提：<font size=5>$y&#x3D;f(x)$</font>是光滑的曲线，参数方程表示为：<br>$$<br>\begin{cases}<br>\LARGE x&#x3D;x(t)\<br>\LARGE y&#x3D;y(t)<br>\end{cases}<br>$$</p><h3 class="bamboo-h-b" id="弧微分1ur2rrix68s" style="color:blue!important">弧微分</h3><div></div><p>$$<br>\Large ds&#x3D;\sqrt{1+(y’)^2}\<br>\Large ds&#x3D;\sqrt{(x’)^2+(y’)^2}<br>$$</p><h3 class="bamboo-h-b" id="曲率275w9gdcp9g" style="color:blue!important">曲率</h3><div></div><p>$$<br>\LARGE k&#x3D;\frac{|y’’|}{(1+(y’)^2)^{\frac{3}{2}}}\</p><p>\LARGE k&#x3D;\frac{|x’y’’-x’’y’|}{((x’)^2+(y’)^2)^{\frac{3}{2}}}<br>$$</p><h3 class="bamboo-h-b" id="曲率半径6pl5tao6kqk" style="color:blue!important">曲率半径</h3><div></div><p>$$<br>\Large R&#x3D;\frac{1}{k}<br>$$</p><h3 class="bamboo-h-b" id="曲率圆deca0eabc0w" style="color:blue!important">曲率圆</h3><div></div><p>法线凹向取一点D，使得$|MD|&#x3D;R$</p><h2 class="bamboo-h-b" id="向量代数与空间解析几何3hpown2j3v" style="color:red!important">向量代数与空间解析几何</h2><div></div><p>向量代数和空间解析几何在高中已经有所接触，所以基础知识会非常简单，而且这个章节的重点是各种定理的运用，只需要记好公式即可。若是能力较强则可以在理解的基础上帮助记忆，以免考试的时候忘记。</p><h3 class="bamboo-h-b" id="角度6lwj15qy91" style="color:blue!important">角度</h3><div></div><p>$$<br>\Large \vec{OM}&#x3D;(x, y, z)\<br>\Large cos\alpha&#x3D;\frac{x}{\sqrt{x^2+y^2+z^2}}\<br>\Large cos\beta&#x3D;\frac{y}{\sqrt{x^2+y^2+z^2}}\<br>\Large cos\gamma&#x3D;\frac{z}{\sqrt{x^2+y^2+z^2}}\<br>\Large cos^2\alpha+cos^2\beta+cos^2\gamma&#x3D;1<br>$$</p><h3 class="bamboo-h-b" id="向量积1slpxdv47j6" style="color:blue!important">向量积</h3><div></div><p>这里仅需注意在做叉乘的时候$\vec{j}$前面是正号（除非系数是负数）</p><h3 class="bamboo-h-b" id="平面方程与法向量2d2o27wsnf5" style="color:blue!important">平面方程与法向量</h3><div></div><p>$$<br>\Large A(x-x_0)+B(y-y_0)+C(z-z_0)&#x3D;0\<br>\Large \vec{s}&#x3D;(A,B,C)<br>$$</p><h3 class="bamboo-h-b" id="点到直线的距离x0w1zba219" style="color:blue!important">点到直线的距离</h3><div></div><p>$$<br>\Large d&#x3D;\frac{|(x-x_0,y-y_0,z-z_0)\times(l,m,n)|}{\sqrt{l^2+m^2+n^2}}<br>$$</p><h3 class="bamboo-h-b" id="空间曲面gj8o7vsr25" style="color:blue!important">空间曲面</h3><div></div><p>空间曲面的基本方程是$F(x,y,z)&#x3D;0$<br></p><h3 class="bamboo-h-b" id="旋转曲面2l7p57quy30" style="color:blue!important">旋转曲面</h3><div></div><p>由一条直线绕轴旋转一周形成的曲面</p><ol><li><p>若有$f(y,z)$绕z轴旋转，则曲面方程为$f(\pm\sqrt{x^2+y^2},z)&#x3D;0$<br></p></li><li><p>$$<br>\large L:<br>    \begin{cases}<br>        x&amp;&#x3D;&amp;x(t)\<br>        y&amp;&#x3D;&amp;y(t)\<br>        z&amp;&#x3D;&amp;z(t)<br>    \end{cases}<br>    \implies<br>    \begin{cases}<br>        x^2+y^2&#x3D;x^2(t)+y^2(t)\<br>        z&#x3D;z(t)<br>    \end{cases}<br>    \implies<br>    \text{消去t}<br>$$</p></li></ol><h3 class="bamboo-h-b" id="常见二次曲面1i8uzndxvpd" style="color:blue!important">常见二次曲面</h3><div></div><p>$$<br>\Large\begin{align}<br>&amp;\text{椭球面}&amp;\frac{x^2}{a^2}+\frac{y^2}{b^2}+\frac{z^2}{c^2}&amp;&#x3D;1\<br>&amp;\text{旋转抛物面}&amp;\frac{x^2}{2p}+\frac{y^2}{2p}&amp;&#x3D;z\<br>&amp;\text{椭圆抛物面}&amp;\frac{x^2}{2p}+\frac{y^2}{2q}&amp;&#x3D;z\quad\text{(pq&gt;0)}\<br>&amp;\text{双曲抛物面}&amp;-\frac{x^2}{2p}+\frac{y^2}{2q}&amp;&#x3D;z\quad\text{(pq&gt;0)}\<br>&amp;\text{单叶双曲面}&amp;\frac{x^2}{a^2}+\frac{y^2}{b^2}-\frac{z^2}{c^2}&amp;&#x3D;1\<br>&amp;\text{双叶双曲面}&amp;\frac{x^2}{a^2}+\frac{y^2}{b^2}-\frac{z^2}{c^2}&amp;&#x3D;-1\<br>&amp;\text{二次锥面}&amp;\frac{x^2}{a^2}+\frac{y^2}{b^2}-\frac{z^2}{c^2}&amp;&#x3D;0\<br>&amp;\text{椭圆柱面}&amp;\frac{x^2}{a^2}+\frac{y^2}{b^2}&amp;&#x3D;1\<br>&amp;\text{双曲柱面}&amp;\frac{x^2}{a^2}-\frac{y^2}{b^2}&amp;&#x3D;1\<br>&amp;\text{抛物柱面}&amp;\frac{x^2}{2p}&amp;&#x3D;y\quad\text{(p&gt;0)}<br>\end{align}<br>$$</p><h2 class="bamboo-h red" id="曲线曲面积分1nl3w0ubx5b">曲线曲面积分</h2><br/><h3 class="bamboo-h blue" id="第一类曲线积分1yunf2u4tbn">第一类曲线积分</h3><br/><p>第一类曲线积分是对弧长积分，可以表示为$\int_cf(x, y)ds$，特别的，当$f(x,y)&#x3D;1$时，$\int_cds&#x3D;s$（s为曲线c的弧长）</p><span class='p red'>计算方法</span><ol><li><p>$\large\begin{cases}x&#x3D;x(t)\y&#x3D;y(t)\\end{cases}\qquad(\alpha\le t\le\beta)\qquad((x’(t))^2+(y’(t))^2\ne0)$<br>$$<br>\large \int_cf(x,y)ds&#x3D;\int_\alpha^\beta f(x(t),y(t))\sqrt{(x’(t))^2+(y’(t))^2}dt<br>$$</p></li><li><p>$\large y&#x3D;y(x)\qquad(a\le x\le b)$<br>$$<br>\large \int_cf(x,y)ds&#x3D;\int_\alpha^\beta f(x,y(x))\sqrt{1+(y’)^2}dt<br>$$</p></li><li><p>$\large r&#x3D;r(\theta)\qquad (\alpha\le\theta\le\beta)$<br>$$<br>\large \int_cf(x,y)ds&#x3D;\int_\alpha^\beta f(r(\theta)cos\theta,r(\theta)sin\theta)\sqrt{(r(\theta))^2+(r’(\theta))^2}d\theta<br>$$</p></li></ol><h2 class="bamboo-h red" id="微分方程rr4qjpel7q">微分方程</h2><br/><h3 class="bamboo-h blue" id="一阶线性微分方程c440ob63qc0">一阶线性微分方程</h3><br/><p>形式：<br>$$<br>\Large y’+p(x)y&#x3D;q(x)<br>$$<br>通解：<br>$$<br>\Large y&#x3D;e^{-\int p(x)dx}(\int q(x)e^{\int p(x)dx}dx+c)<br>$$</p><h3 class="bamboo-h blue" id="可降阶微分方程wn8ynlk855">可降阶微分方程</h3><br/><ol><li><p>$$<br>\Large y^{(n)}&#x3D;f(x)\<br>\Large y&#x3D;\int \int…\int f(x)dx…dxdx+\sum C_ix^{n-i}<br>$$</p></li><li><p>$$<br>\Large y^n&#x3D;f(x, y’)\<br>\Large p&#x3D;y’\Rightarrow y’’&#x3D;p’\<br>\Large p’&#x3D;f(x, p)<br>$$</p></li><li><p>$$<br>\Large y’’&#x3D;f(y, y’)\<br>\Large p&#x3D;y’\Rightarrow y’’&#x3D;p\frac{dp}{dy}<br>$$</p></li></ol><h3 class="bamboo-h blue" id="二阶常系数齐次线性微分方程1gmxeeki3xi">二阶常系数齐次线性微分方程</h3><br/><p>形式：$\large y’’+py’+qy&#x3D;0$</p><p>通解：</p><table><thead><tr><th>特征方程的根</th><th>通解</th></tr></thead><tbody><tr><td>$\large r1\ne r2$</td><td>$\Large y&#x3D;C_1e^{r_1x}+C_2e^{r_2x}$</td></tr><tr><td>$\large r1&#x3D;r2&#x3D;r$</td><td>$\Large y&#x3D;(C_1+C_2x)e^{rx}$</td></tr><tr><td>$\large r&#x3D;\alpha \pm\beta i$</td><td>$\Large y&#x3D;e^{\alpha x}(C_1cos\beta x+C_2sin\beta x)$</td></tr></tbody></table><h3 class="bamboo-h blue" id="二阶常系数非齐次线性微分方程1jr9dp4tb0t">二阶常系数非齐次线性微分方程</h3><br/><p>形式：$\large y’’+py’+qy&#x3D;f(x)$</p><p>特解：</p><ol><li><p>若$\large f(x)&#x3D;e^{\lambda x}P_n(x)$<br>$$<br>\large y^*&#x3D;x^ke^{\lambda x}Q_n(x)\[3ex]<br>\large k&#x3D;<br>\begin{cases}<br>0&amp;\lambda\ne r1\quad &amp;&amp;\quad\lambda\ne r2\[2ex]<br>1&amp;\lambda&#x3D;r1\quad||\quad\lambda&#x3D;r2\[2ex]<br>2&amp;\lambda&#x3D;r1&#x3D;r2<br>\end{cases}<br>$$</p></li><li><p>若$\large f(x)&#x3D;e^{\alpha x}(P_n(x)cos\beta x+Q_n(x)sin\beta x)$<br>$$<br>\large y^*&#x3D;x^ke^{\alpha x}(R_l(x)cos\beta x+S_l(x)sin\beta x)\quad(l&#x3D;min(n,m))\[3ex]<br>\large k&#x3D;<br>\begin{cases}<br>0&amp;\alpha\pm\beta i\ne r1\quad&amp;&amp;\quad\alpha\pm\beta i\ne r2\[2ex]<br>1&amp;\alpha\pm\beta i&#x3D;r1\quad||\quad\alpha\pm\beta i&#x3D;r2<br>\end{cases}<br>$$</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 考研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高等数学公式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bamboo instruction</title>
      <link href="/2021/03/08/bamboo-instruction/"/>
      <url>/2021/03/08/bamboo-instruction/</url>
      
        <content type="html"><![CDATA[<h1 class="bamboo-h " id="hexo bamboo特效介绍1viuio3zgmg">hexo bamboo特效介绍</h1><br/><h2 class="bamboo-h " id="标题dgdw57bh9w0">标题</h2><br/><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% title h2, 标题内容 %&#125;</span><br><span class="line">&#123;% titleB h2, 标题内容 %&#125;</span><br></pre></td></tr></table></figure><h2 class="bamboo-h " id="文字颜色1htifqeawq6">文字颜色</h2><br/><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% span 文字样式, 文字内容 %&#125;</span><br></pre></td></tr></table></figure><p>文字样式包括颜色、大小、是否居中等</p><h2 class="bamboo-h " id="tabs2iq99va4zbw">tabs</h2><br/><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs tab-id %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab tab1 --&gt;</span><br><span class="line"></span><br><span class="line">tab1内容</span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab tab2 --&gt;</span><br><span class="line"></span><br><span class="line">tab内容</span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><h2 class="bamboo-h " id="Text文本样式标签演示27tgfzv4mbp">Text文本样式标签演示</h2><br/><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% title h2, Text文本样式标签演示 %&#125;</span><br><span class="line"></span><br><span class="line">带 &#123;% u 下划线 %&#125; 的文本</span><br><span class="line"></span><br><span class="line">带 &#123;% emp 着重号 %&#125; 的文本</span><br><span class="line"></span><br><span class="line">带 &#123;% wavy 波浪线 %&#125; 的文本</span><br><span class="line"></span><br><span class="line">带 &#123;% del 删除线 %&#125; 的文本</span><br><span class="line"></span><br><span class="line">键盘样式的文本 &#123;% kbd command %&#125; + &#123;% kbd D %&#125;</span><br><span class="line"></span><br><span class="line">密码样式的文本：&#123;% psw 这里没有验证码 %&#125;</span><br></pre></td></tr></table></figure><p>后续待补充……</p>]]></content>
      
      
      
        <tags>
            
            <tag> instructions </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tips for interactive problem</title>
      <link href="/2021/02/22/Tips-for-interactive-problem/"/>
      <url>/2021/02/22/Tips-for-interactive-problem/</url>
      
        <content type="html"><![CDATA[<h1 class="bamboo-h-b" id="Little tips2e8uopbaen2" style="color:!important">Little tips</h1><div></div><p>While solving interactive problems, we should</p><ol><li>Let “ask” function do the query</li><li>Never forget <span class='p blue'>cout.flush()</span>, even you have used endl</li></ol>]]></content>
      
      
      <categories>
          
          <category> CF </category>
          
          <category> tips </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>1486B Eastern Exhibition</title>
      <link href="/2021/02/19/1486B-Eastern-Exhibition/"/>
      <url>/2021/02/19/1486B-Eastern-Exhibition/</url>
      
        <content type="html"><![CDATA[<p><a href="https://codeforces.com/contest/1486/problem/B"><h1 class="bamboo-h-b" id="Eastern Exhibitionytoa4aanrx" style="color:!important">Eastern Exhibition</h1><div></div></a></p><h2 id="The-question"><a href="#The-question" class="headerlink" title="The question"></a>The question</h2><p><img src="https://img11.360buyimg.com/ddimg/jfs/t1/164596/37/6800/92526/602f98d3E903dff60/57e58e20623b0a89.png" class="lazyload placeholder" data-srcset="https://img11.360buyimg.com/ddimg/jfs/t1/164596/37/6800/92526/602f98d3E903dff60/57e58e20623b0a89.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="CF 1486B Q.png"></p><h2 id="Input-Output"><a href="#Input-Output" class="headerlink" title="Input &amp; Output"></a>Input &amp; Output</h2><p><img src="https://img10.360buyimg.com/ddimg/jfs/t1/159000/30/7802/24029/602f98d3E326d5608/d0c20bd25b47ed11.png" class="lazyload placeholder" data-srcset="https://img10.360buyimg.com/ddimg/jfs/t1/159000/30/7802/24029/602f98d3E326d5608/d0c20bd25b47ed11.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="CF 1486B S.png"></p><h2 id="Solve"><a href="#Solve" class="headerlink" title="Solve"></a>Solve</h2><p>The very first thing we should know is we are using Manhattan distance to represent the distance of to points, which means we can handle Xs and Ys separately.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;n; i++) cin&gt;&gt;x[i]&gt;&gt;y[i];</span><br><span class="line"><span class="built_in">sort</span>(x.<span class="built_in">begin</span>(), x.<span class="built_in">end</span>());</span><br><span class="line"><span class="built_in">sort</span>(y.<span class="built_in">begin</span>(), y.<span class="built_in">end</span>());</span><br></pre></td></tr></table></figure><p>If the number of points is odd, there will be only 1 point to make sum of absolute difference of Xs minimum, so does Ys.</p><p>Otherwise, any X between two mid Xs has the same sum, so does Ys.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ll cx, cy;</span><br><span class="line"><span class="keyword">if</span>(x.<span class="built_in">size</span>()&amp;<span class="number">1</span>) cx=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="type">int</span> mid=x.<span class="built_in">size</span>()&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    cx=x[mid]-x[mid<span class="number">-1</span>]<span class="number">+1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(y.<span class="built_in">size</span>()&amp;<span class="number">1</span>) cy=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="type">int</span> mid=y.<span class="built_in">size</span>()&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    cy=y[mid]-y[mid<span class="number">-1</span>]<span class="number">+1</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;cx*cy&lt;&lt;endl;</span><br></pre></td></tr></table></figure><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">2e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> inf = INT_MAX;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; x, y;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        cin&gt;&gt;n;</span><br><span class="line">        x.<span class="built_in">resize</span>(n);</span><br><span class="line">        y.<span class="built_in">resize</span>(n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;n; i++) cin&gt;&gt;x[i]&gt;&gt;y[i];</span><br><span class="line">        <span class="built_in">sort</span>(x.<span class="built_in">begin</span>(), x.<span class="built_in">end</span>());</span><br><span class="line">        <span class="built_in">sort</span>(y.<span class="built_in">begin</span>(), y.<span class="built_in">end</span>());</span><br><span class="line">        ll cx, cy;</span><br><span class="line">        <span class="keyword">if</span>(x.<span class="built_in">size</span>()&amp;<span class="number">1</span>) cx=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">int</span> mid=x.<span class="built_in">size</span>()&gt;&gt;<span class="number">1</span>;</span><br><span class="line">            cx=x[mid]-x[mid<span class="number">-1</span>]<span class="number">+1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(y.<span class="built_in">size</span>()&amp;<span class="number">1</span>) cy=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">int</span> mid=y.<span class="built_in">size</span>()&gt;&gt;<span class="number">1</span>;</span><br><span class="line">            cy=y[mid]-y[mid<span class="number">-1</span>]<span class="number">+1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;cx*cy&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> geometry </tag>
            
            <tag> sorting </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1490F Equalize the Array</title>
      <link href="/2021/02/19/1490F-Equalize-the-Array/"/>
      <url>/2021/02/19/1490F-Equalize-the-Array/</url>
      
        <content type="html"><![CDATA[<p><a href="https://codeforces.com/problemset/problem/1490/F"><h1 class="bamboo-h-b" id="Equalize the Array1eg94lnru7c" style="color:!important">Equalize the Array</h1><div></div></a></p><h2 id="The-question"><a href="#The-question" class="headerlink" title="The question"></a>The question</h2><p><img src="https://img13.360buyimg.com/ddimg/jfs/t1/155245/36/17707/109508/602eae8dE7453c7e9/4bd6b888f152de36.png" class="lazyload placeholder" data-srcset="https://img13.360buyimg.com/ddimg/jfs/t1/155245/36/17707/109508/602eae8dE7453c7e9/4bd6b888f152de36.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="CF 1490F Q.png"></p><h2 id="Input-Output"><a href="#Input-Output" class="headerlink" title="Input &amp; Output"></a>Input &amp; Output</h2><p><img src="https://img12.360buyimg.com/ddimg/jfs/t1/162267/29/6845/14495/602eae8dE4520c723/bab2c3e7c89c185b.png" class="lazyload placeholder" data-srcset="https://img12.360buyimg.com/ddimg/jfs/t1/162267/29/6845/14495/602eae8dE4520c723/bab2c3e7c89c185b.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="CF 1490F S.png"></p><h2 id="Simplify-the-question"><a href="#Simplify-the-question" class="headerlink" title="Simplify the question"></a>Simplify the question</h2><p>We’re supposed to delete minimum number of elements to make the given array <span class='p red'>beautiful</span>, which means every number in the array appears same times</p><h2 id="Solve"><a href="#Solve" class="headerlink" title="Solve"></a>Solve</h2><p>First, we will save the array to a map. Since we will do a sort, which can’t be done with map, I created a vector of pair</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">ll a[maxn];</span><br><span class="line">map&lt;ll, <span class="type">int</span>&gt; mp;</span><br><span class="line">vector&lt;pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;&gt; b;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; x, pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.second &gt; y.second;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">    cin &gt;&gt; a[i];</span><br><span class="line">    mp[a[i]]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> it:mp) &#123;</span><br><span class="line">    b.<span class="built_in">emplace_back</span>(it.first, it.second);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(b.<span class="built_in">begin</span>(), b.<span class="built_in">end</span>(), cmp);</span><br></pre></td></tr></table></figure><p>The next step is the key. We sorted the vector with the number of elements in decreasing order.</p><p>b[i].second*(i+1) means the number of elements will be left, so n-b[i].second*(i+1) will be the number of elements we will delete(for this one).</p><p>Then we just find the minimum one and output</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> ans = inf;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; b.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">    ans = <span class="built_in">min</span>(ans, n - b[i].second * (i + <span class="number">1</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">2e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> inf = INT_MAX;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line">ll a[maxn];</span><br><span class="line">map&lt;ll, <span class="type">int</span>&gt; mp;</span><br><span class="line">vector&lt;pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;&gt; b;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; x, pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.second &gt; y.second;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    b.<span class="built_in">clear</span>();</span><br><span class="line">    mp.<span class="built_in">clear</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        mp[a[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> it:mp) &#123;</span><br><span class="line">        b.<span class="built_in">emplace_back</span>(it.first, it.second);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(b.<span class="built_in">begin</span>(), b.<span class="built_in">end</span>(), cmp);</span><br><span class="line">    <span class="type">int</span> ans = inf;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; b.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">        ans = <span class="built_in">min</span>(ans, n - b[i].second * (i + <span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--) &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sorting </tag>
            
            <tag> math </tag>
            
            <tag> 1500 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>my first blog</title>
      <link href="/2021/02/17/my-first-blog/"/>
      <url>/2021/02/17/my-first-blog/</url>
      
        <content type="html"><![CDATA[<h1 class="bamboo-h-b" id="Welcome to Adam's blog1o83oga3an7" style="color:!important">Welcome to Adam's blog</h1><div></div><p>我会在这个博客不停更新各种<del><span class='p blue'>奇奇怪怪的</span></del>内容，如果你想找</p><ol><li>题解（ACM菜逼一个）</li><li>游戏攻略<del>（？我tm直接竟有此事）</del></li><li>考研知识点（考研党路过~）</li><li><del>奇奇怪怪的</del>软件的安装+配置教程</li></ol><p>希望大家都能在这里找到自己想要的东西！</p><p>如果有想看的东西可以给我留言嗷</p>]]></content>
      
      
      <categories>
          
          <category> try out </category>
          
      </categories>
      
      
        <tags>
            
            <tag> first one </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
